//
//  ParentInteractor.swift
//  DataPassing
//
//  Created by Raymond Law on 3/22/18.
//  Copyright (c) 2018 Clean Swift LLC. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol ParentBusinessLogic
{
  func showGreeting(request: Parent.ShowGreeting.Request)
  func tellChild(request: Parent.TellChild.Request)
}

protocol ParentDataStore
{
  var name: String { get set }
}

class ParentInteractor: ParentBusinessLogic, ParentDataStore
{
  var presenter: ParentPresentationLogic?
  var worker: ParentWorker?
  var name: String = ""
  
  // MARK: Show greeting
  
  func showGreeting(request: Parent.ShowGreeting.Request)
  {
    let response = Parent.ShowGreeting.Response(name: name)
    presenter?.presentGreeting(response: response)
  }
  
  // MARK: Tell child
  
  func tellChild(request: Parent.TellChild.Request)
  {
    name = request.name
    let response = Parent.TellChild.Response()
    presenter?.presentTellChild(response: response)
  }
}
